#include <iostream>
#include <vector>
#include <cmath>
#include <algorithm>

using namespace std;

vector <int> fill_arr() {

	srand(time(NULL));
	vector <int> arr = {};
	int n, temp, start, end, op;
	cout << "Выберете способ заполнения массива:\n1) Случайными числами в диапазоне\n2) Вводом с клавиатуры\n";
	cin >> op;
	switch (op) {
	case 1: {
		cout << "Введите размер массива, начальную и конечные границы:\n";
		cin >> n >> start >> end;
		for (int i = 0; i < n; i++) {
			temp = start + rand() % (end - start);
			arr.push_back(temp);
		}
		return arr;
	}
	case 2: {
		cout << "Введите размер массива и затем введите элементы массива:\n";
		cin >> n;
		for (int i = 0; i < n; i++) {
			cin >> temp;
			arr.push_back(temp);
		}
		return arr;
	}
	default: {
		cout << "Ошибка.";
	}
	}
	
}

int min_pow(vector <int> arr) {
	bool FLAG = false;
	int temp = 1, count = 0, min = 0;
	vector <int> count_pow = {};
	for (int i = 0; i < arr.size(); i++) {
		while (arr[i] >= temp) {
			temp *= 2;
			count++;
		}
		if (pow(2, count - 1) == arr[i]) {
			count_pow.push_back(arr[i]);
			count = 0;
			temp = 1;
			FLAG = true;
		}
		else {
			count = 0;
			temp = 1;
		}
	}

	if (FLAG) {
		min = count_pow[0];
		for (int i = 0; i < count_pow.size(); i++) {
			if (count_pow[i] <= min) {
				min = count_pow[i];
			}
		}
	}
	else min = 0;

	return min;
}

vector <int> reverse_num(vector <int> arr) {
	int temp, current_num = 0, count = 0, num;
	for (int i = 0; i < arr.size(); i++) {
		temp = arr[i];
		while (temp >= 1) {
			num = temp % 10;
			temp /= 10;
			count++;
		}
		if (num % 2 == 1) {
			for (int j = count; j != 0; j--) {
				current_num += arr[i] % 10 * pow(10, j - 1);
				arr[i] /= 10;
			}
			arr[i] = current_num;
		}
		current_num = 0;
		count = 0;
	}
	return arr;
}

//с библеотекой algorithm и без
/*
* int temp
  for (int i = 0; i < arr.size() - 1; i++) {
		for (int j = 0; j < arr.size() - i - 1; j++) {
			if (arr[j] > arr[j + 1]) {
				temp = arr[j];
				arr[j] = arr[j + 1];
				arr[j + 1] = temp;
			}
		}
  }

*/

vector <int> sorting(vector <int> arr) {
	sort(arr.begin(), arr.end());
	return arr;
}

void output_arr(vector <int> arr) {

	for (int i = 0; i < arr.size(); i++) {
		cout << arr[i] << " ";
	}

}

int main() {

	setlocale(LC_ALL, "RUSSIAN");
	vector <int> new_arr = fill_arr();
	cout << endl;
	
	output_arr(new_arr);

	cout << endl;

	if (min_pow(new_arr) != 0) {
		cout << "Наименьшее число попадающее под условие Q: " << min_pow(new_arr) << endl;
	}
	else cout << "Число попадающее под условие Q не существует!" << endl;

	cout << "Изменённый по условию T массив: ";
	output_arr(reverse_num(new_arr));

	cout << endl;
	
	cout << "Отсортированный массив: ";
	output_arr(sorting(new_arr));

}
