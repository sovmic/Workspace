#include <iostream>
#include <cmath>
#include <string>
#include <vector>
#include <algorithm>

using namespace std;

//алгоритм: полученное число превращаем в двоичную запись посредством рекурсивного деления
//превращаем строку-число (в двоичной записи) обратно в число

string to_binary(int num) {
	if (num == 0) {
		return "";
	}

	return to_binary(num / 2) + to_string(num % 2);
}


int main() {

	int num = -44;

	cout << "ABS bin number: " << to_binary(abs(num)) << endl;

	//создание вектора из нулей для корректной перезаписи двоичного числа
	vector <int> binary = {};

	for (int i = 0; i < 8; i++) {
		binary.push_back(0);
	}

	//определяем длину двоичной записи
	int temp = stoi(to_binary(abs(num)));
	int count = 0;
	while (temp >= 1) {
		temp /= 10;
		count++;
	}

	//создаём вектор из индексов в которых есть разряды двоек
	vector <int> numbers = {};
	temp = stoi(to_binary(abs(num)));
	for (int i = 0; i < count; i++) {
		if (temp % 10 == 1) {
			numbers.push_back(i);
			temp /= 10;
		}
		else {
			temp /= 10;
		}
	}

	//заполняем первый вектор индексами в правильном порядке
	for (int i = 7; i > -1; i--) {
		for (int j = numbers.size() - 1; j > -1; j--) {
			if (i == numbers[j]) {
				binary[i] = 1;
			}
		}
	}
	reverse(binary.begin(), binary.end());

	//инвертируем вектор
	for (int i = 0; i < binary.size(); i++) {
		if (binary[i] == 0) {
			binary[i] = 1;
		}
		else if (binary[i] == 1) {
			binary[i] = 0;
		}
	}

	//делаем побитовое прибавление разряда
	binary[binary.size() - 1] += 1;
	for (int i = binary.size() - 1; i > -1; i--) {
		if (binary[i] == 2) {
			binary[i] = 0;
			if (i != 0) {
				binary[i - 1] += 1;
			}
		}
	}

	for (int i = 0; i < binary.size(); i++) {
		if (i == 4) {
			cout << " ";
		}
		cout << binary[i];
	}
}
